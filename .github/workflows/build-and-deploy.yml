name: CI

on:
  push:
    branches: [main]

  workflow_dispatch:

env:
  REGISTRY: 'registry.digitalocean.com/air'
  IMAGE_NAME: 'original-api'

jobs:
  install-deps:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: node modules cache store
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: cache-node-modules-${{ hashFiles('yarn.lock') }}
      - uses: actions/setup-node@v1
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          node-version: 16.3.0
      - name: yarn install
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install --pure-lockfile

  nx_build_publish:
    runs-on: ubuntu-latest
    needs: install-deps
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: node modules cache load
        uses: actions/cache@v2
        with:
          path: node_modules
          key: cache-node-modules-${{ hashFiles('yarn.lock') }}
      
      - name: nx set shas
        uses: nrwl/nx-set-shas@v2
    
      - name: shared-api-spec prepare
        run: yarn nx run shared-api-spec:prepare

      - name: nx build
        run: yarn nx affected --target=build --prod --parallel

      - name: doctl install
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: nx build-docker
        run: yarn nx affected --target=build-docker --parallel
      
      - name: doctl registry login
        run: doctl registry login --expiry-seconds 600

      - name: nx doctl-docker-publish
        run: yarn nx affected --target=doctl-docker-publish --parallel

      - name: nx doctl-app-deploy
        run: yarn nx affected --target=doctl-app-deploy --parallel
